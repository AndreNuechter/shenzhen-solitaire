- const cardWidth = 128;
- const cardHeight = 178;
- const cardGap = 8;
- const circleRadius = 24;
-
    const viewBox = {
        x: -cardGap,
        y: -cardGap,
        width: (cardWidth + cardGap) * 8 + cardGap,
        get height() { return Math.ceil((this.width / 16) * 10); }
    };

doctype html
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(name="viewport" content="width=device-width, initial-scale=1")
        meta(http-equiv="X-UA-Compatible" content="ie=edge")
        meta(name="description" content="A version of the popular card-game.")
        meta(name="theme-color" content="gold")
        link(rel="manifest" href="./manifest.json")
        link(rel="stylesheet" href="css/index.css")
        // build:js
        script(src="js/index.js" type="module")
        script(src="js/card-slots.js" type="module")
        // endbuild
        title Shenzhen Solitaire
    body
        #reset-btn
        #win-notification Congratulations, you have won.
        svg#table(preserveAspectRatio="xMinYMax meet" viewBox=`${viewBox.x} ${viewBox.y} ${viewBox.width} ${viewBox.height}`)
            rect(x=viewBox.x y=viewBox.y width=viewBox.width height=viewBox.height filter="url(#texture)" fill="none")

            each _, i in new Array(3)
                g.card-slot(transform=`translate(${(cardWidth + cardGap) * i},0)` data-slot-type="dragon")
                    rect(x=0 y=0 rx=5)
            
            g#dragon-summoning-btns(transform=`translate(${(cardWidth + cardGap) * 3 + cardGap},${circleRadius + cardGap})`)
                each color, i in ['black', 'green', 'red']
                    g.dragon-summoning-btn(data-color=color)
                        circle(
                            cx=circleRadius 
                            cy=((circleRadius * 2 + cardGap) * i) 
                            r=circleRadius)
                        use(href='#skull'
                            fill=color
                            stroke=color
                            x=8 
                            y=((circleRadius * 2 + cardGap) * i) - 12
                            width=32
                            height=32)

            g.card-slot(transform=`translate(${(cardWidth + cardGap) * 3.5},0)` data-slot-type="flower")
                rect(x=0 y=0 rx=5)

            each _, i in new Array(3)
                g.card-slot(transform=`translate(${(cardWidth + cardGap) * (i + 5)},0)` data-slot-type="collection")
                    rect(x=0 y=0 rx=5)

            each _, i in new Array(8)
                g.card-slot(transform=`translate(${(cardWidth + cardGap) * i},${cardHeight + cardGap})` data-slot-type="stacking")
                    rect(x=0 y=0 rx=5)

        svg(width="0" height="0" style="position: absolute")
            defs
                filter#texture(x="0" y="0" width="100%" height="100%")
                    feTurbulence(type="fractalNoise" baseFrequency="1" result="noise" numOctaves="1")
                    feSpecularLighting(in="noise" lighting-color="forestgreen" surfaceScale="4")
                        feDistantLight(azimuth="45" elevation="10")
                linearGradient#button(gradientTransform="rotate(90)")
                    stop(offset="5%" stop-color="grey")
                    stop(offset="95%" stop-color="whitesmoke")
                linearGradient#button-clicked(gradientTransform="rotate(90)")
                    stop(offset="5%" stop-color="lightgrey")
                    stop(offset="95%" stop-color="grey")
                linearGradient#card-backside-pt1
                    stop(offset="40%" stop-color="gold")
                    stop(offset="95%" stop-color="red")
                linearGradient#card-backside-pt2(gradientTransform="rotate(25)")
                    stop(offset="40%" stop-color="transparent")
                    stop(offset="95%" stop-color="red")
                pattern#card-backside(viewBox="1 1 5 5" width="20%" height="20%")
                    rect(x="0" y="0" width="10" height="10" fill="url('#card-backside-pt1')")
                    rect(x="0" y="0" width="10" height="10" fill="url('#card-backside-pt2')")
                symbol#skull(viewBox="342,01,40,473")
                    path(stroke-width="2" class="filled-path" stroke-linecap="round" stroke-linejoin="arcs" stroke-miterlimit="1" fill-rule="evenodd" d="M257 181Q327 163 353 193Q348 240 319 241Q250 246 253 185Z")
                    path(stroke-width="2" class="filled-path" stroke-linecap="butt" stroke-linejoin="arcs" stroke-miterlimit="1" fill-rule="evenodd" d="M393 191Q410 163 481 188Q497 239 419 239Q393 235 393 191Z")
                    path(stroke-width="2" class="filled-path" stroke-linecap="butt" stroke-linejoin="arcs" stroke-miterlimit="1" fill-rule="evenodd" d="M369 236L349 264Q343 278 368 266Q400 280 390 260Z")
                    path(stroke-width="9" fill="none" stroke-linecap="round" stroke-linejoin="arcs" stroke-miterlimit="1" fill-rule="evenodd" d="M230 171Q258 215 241 236Q205 268 262 281Q293 296 300 341Q308 281 320 348Q330 284 341 352Q353 292 360 361Q373 293 385 359Q393 294 405 351Q415 288 425 341Q430 276 444 335Q441 281 478 264Q525 250 498 224Q490 213 502 165")
                    path(stroke-width="9" fill="none" stroke-linecap="round" stroke-linejoin="arcs" stroke-miterlimit="1" fill-rule="evenodd" d="M300 340Q310 408 320 346Q332 423 340 350Q352 431 360 357Q377 435 385 356Q400 430 404 346Q425 424 425 339Q441 411 444 334")
                    path(stroke-width="17" fill="none" stroke-linecap="butt" stroke-linejoin="arcs" stroke-miterlimit="1" fill-rule="evenodd" d="M267 285Q249 301 272 317Q284 333 290 377Q296 403 323 401Q379 437 427 399Q453 399 460 371Q459 333 469 306Q485 289 467 270")
                    path(stroke-width="9" fill="none" stroke-linecap="butt" stroke-linejoin="arcs" stroke-miterlimit="1" fill-rule="evenodd" d="M300 341L318 346L340 353L359 359L385 358L405 351L425 342L444 334")
                    path(stroke-width="17" fill="none" stroke-linecap="round" stroke-linejoin="arcs" stroke-miterlimit="1" fill-rule="evenodd" d="M505 222Q542 152 537 105Q527 63 488 45Q342 -16.76666259765625 235 45Q172 88 201 153Q226 196 240 230")